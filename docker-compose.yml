version: '3.8'

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: socialmedia
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Redis
  redis:
    image: redis:latest
    container_name: redis

  backend:
    build:
      context: ./SocialMedia/socialmediabackend
    volumes:
      - ./SocialMedia/socialmediabackend:/app
      - media:/app/media
      - static_volume:/app/static			
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis      
    environment:
      - DATABASE_URL=postgres://postgres:123@postgres:5432/socialmedia
      - REDIS_URL=redis://redis:6379/0

#  frontend:
 #   build:
  #    context: ./Frontend(client)/social-media-client-app
   # volumes:
    #3  - react_build:/Frontend/build
     # - ./Frontend(client)/social-media-client-app/build:/var/www/react
    #depends_on:
     # - backend  
    


  celery:
    restart: always
    build: 
      context: ./SocialMedia/socialmediabackend
    command: celery -A socialmediabackend.celery worker --pool=solo -l info

    volumes:
      - ./SocialMedia/socialmediabackend:/app
    container_name: celery
    depends_on:
      - postgres
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0



  nginx:
    image: nginx:latest 
    # image: public.ecr.aws/nginx/nginx:stable-perl
    ports: 
      - 80:8080
      - 443:443
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
#      - react_build:/var/www/react
      # - ./Frontend(client)/social-media-client-app/build:/var/www/react
      - media:/var/www/media
      - static_volume:/var/www/static
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot
    depends_on:
      - backend
      #- frontend

volumes:
  postgres_data:
 # react_build:
  media:
  static_volume:
